service:
  name: api-ts

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-iam-roles-per-function:
    defaultInherit: true # Each function will inherit the service level roles too.
  prune: # automatically prune old lambda versions
    automatic: true
    number: 3
  dynamodb:
    start:
      migrate: true
      seed: true
    stages:
      - local
  endpoints:
    dynamodb-local: 'http://localhost:8000'

# Add the serverless-webpack plugin
plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-prune-plugin
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  frameworkVersion: '1.75.1'
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  tracing:
    lambda: true
  environment:
    DEBUG: '*'
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DB_NAME: dog-finder-ts
    CONFIG_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb-local}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

resources:
  Resources:
    DynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        # GlobalSecondaryIndexes:
        #   - IndexName: "type-createdAt-index"
        #     KeySchema:
        #       - AttributeName: "type"
        #         KeyType: "HASH"
        #       - AttributeName: "createdAt"
        #         KeyType: "RANGE"
        #     Projection:
        #       ProjectionType: "ALL"
        #     ProvisionedThroughput:
        #       ReadCapacityUnits: 1
        #       WriteCapacityUnits: 1
                
        TableName: ${self:provider.environment.DB_NAME}

functions:
  foundDogCreate:
    handler: src/handlers/foundDog.create
    events:
      - http:
          method: post
          path: found-dog
  foundDogDelete:
    handler: src/handlers/foundDog.del
    events:
      - http:
          method: delete
          path: found-dog/{id}
  foundDogEdit:
    handler: src/handlers/foundDog.edit
    events:
      - http:
          method: put
          path: found-dog/{id}
  foundDogDetail:
    handler: src/handlers/foundDog.detail
    events:
      - http:
          method: get
          path: found-dog/{id}
