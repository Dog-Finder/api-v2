service:
  name: dog-finder-api

provider:
  name: aws
  runtime: nodejs12.x
  frameworkVersion: '1.75.1'
  stage: ${opt:stage, 'dev'}
  region: 'us-east-1'
  timeout: 30
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  tracing:
    lambda: true
  environment:
    DEBUG: '*'
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DB_NAME: dog-finder-db-${self:provider.stage}
    CONFIG_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb-local}
    JWT_SECRET: secret

  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
      Resource: "arn:aws:dynamodb:us-east-1:983570756921:table/${self:provider.environment.DB_NAME}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:us-east-1:983570756921:table/${self:provider.environment.DB_NAME}/index/*"
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: "arn:aws:s3:::dog-finder-images/*"

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: "yarn"
  serverless-iam-roles-per-function:
    defaultInherit: true # Each function will inherit the service level roles too.
  prune: # automatically prune old lambda versions
    automatic: true
    number: 3
  endpoints:
    dynamodb-local: 'http://localhost:8000'

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-prune-plugin

functions:

  authorize:
    handler: src/handlers/authorize.authorize

  foundDogCreate:
    handler: src/handlers/foundDog.create
    events:
      - http:
          method: post
          path: found-dog
          authorizer: authorize

  foundDogDelete:
    handler: src/handlers/foundDog.del
    events:
      - http:
          method: delete
          path: found-dog/{id}
          authorizer: authorize
  foundDogEdit:
    handler: src/handlers/foundDog.edit
    events:
      - http:
          method: put
          path: found-dog/{id}
          authorizer: authorize
  foundDogDetail:
    handler: src/handlers/foundDog.detail
    events:
      - http:
          method: get
          path: found-dog/{id}
          authorizer: authorize
  foundDogList:
    handler: src/handlers/foundDog.list
    events:
      - http:
          method: get
          path: found-dog
          authorizer: authorize

  foundDogUserList:
    handler: src/handlers/foundDog.userList
    events:
      - http:
          method: get
          path: found-dog/user
          authorizer: authorize

  lostDogCreate:
    handler: src/handlers/lostDog.create
    events:
      - http:
          method: post
          path: lost-dog
          authorizer: authorize
  lostDogDelete:
    handler: src/handlers/lostDog.del
    events:
      - http:
          method: delete
          path: lost-dog/{id}
          authorizer: authorize
  lostDogEdit:
    handler: src/handlers/lostDog.edit
    events:
      - http:
          method: put
          path: lost-dog/{id}
          authorizer: authorize
  lostDogDetail:
    handler: src/handlers/lostDog.detail
    events:
      - http:
          method: get
          path: lost-dog/{id}
          authorizer: authorize
  lostDogList:
    handler: src/handlers/lostDog.list
    events:
      - http:
          method: get
          path: lost-dog
          authorizer: authorize

  lostDogUserList:
    handler: src/handlers/lostDog.userList
    events:
      - http:
          method: get
          path: lost-dog/user
          authorizer: authorize

  imageUpload:
    handler: src/handlers/images.upload
    events:
      - http:
          path: upload
          method: get

  vectorUpload:
    handler: src/handlers/images.uploadVector
    events:
      - http:
          path: upload-vector
          method: post

  userCreate:
    handler: src/handlers/users.create
    events:
      - http:
          path: sign-up
          method: post
  
  userDetail:
    handler: src/handlers/users.detail
    events:
      - http:
          path: user
          method: get
          authorizer: authorize

  userLogin:
    handler: src/handlers/users.login
    events:
      - http:
          path: log-in
          method: post

  searchKNN:
    handler: src/handlers/search.search
    events:
      - http:
          path: search
          method: post
          authorizer: authorize
