[{"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/queries/exampleQuery.ts":"1","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/db_config.ts":"2","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/model.ts":"3","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/handlers/foundDog.ts":"4","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/dog-notice.ts":"5","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/marker.ts":"6","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/address.ts":"7","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/handlers/utils.ts":"8","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/handlers/lostDog.ts":"9"},{"size":54,"mtime":1595104213408,"results":"10","hashOfConfig":"11"},{"size":542,"mtime":1595118022933,"results":"12","hashOfConfig":"11"},{"size":343,"mtime":1595118101412,"results":"13","hashOfConfig":"11"},{"size":1782,"mtime":1595124026519,"results":"14","hashOfConfig":"11"},{"size":1361,"mtime":1595123052569,"results":"15","hashOfConfig":"11"},{"size":170,"mtime":1595118098180,"results":"16","hashOfConfig":"11"},{"size":262,"mtime":1595118119629,"results":"17","hashOfConfig":"11"},{"size":400,"mtime":1595121789660,"results":"18","hashOfConfig":"11"},{"size":574,"mtime":1595122024051,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"enybgi",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/queries/exampleQuery.ts",[],"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/db_config.ts",[],"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/model.ts",[],"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/handlers/foundDog.ts",[],"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/dog-notice.ts",["40"],"import {\n  attribute,\n  autoGeneratedHashKey,\n  rangeKey,\n  table,\n} from '@aws/dynamodb-data-mapper-annotations';\nimport Marker from '@src/models/marker';\nimport Address from '@src/models/address';\n\nconst { DB_NAME } = process.env;\n\n@table(DB_NAME)\nexport class DogNotice {\n    @autoGeneratedHashKey()\n    id: string;\n\n    @attribute()\n    createdAt: Date;\n\n    @attribute()\n    type: string;\n\n    @attribute()\n    name?: string;\n\n    @attribute()\n    date?: Date;\n\n    @attribute()\n    sex?: string;\n\n    @attribute()\n    imageLinks?: string;\n\n    @attribute()\n    commentary?: boolean;\n\n    @attribute()\n    marker?: Marker\n\n    @attribute()\n    address?: Address\n}\n\ninterface BodyData {\n  name?: string;\n  date?: string;\n  sex?: string;\n  commentary?: string;\n  marker?: {longitude: number, latitude: number};\n  address?: {\n    name: string,\n    country: string,\n    city: string,\n    street: string,\n  };\n  imageLinks?: string\n}\n\nexport function createDogNotice(data: BodyData, type : string): DogNotice {\n  const notice = Object.assign(new DogNotice(), {\n    type,\n    createdAt: new Date(),\n    name: data.name,\n    date: data.date,\n    sex: data.sex,\n    imageLinks: data.imageLinks,\n    commentary: data.commentary,\n    marker: Object.assign(new Marker(), data.marker),\n    address: Object.assign(new Address(), data.address),\n  });\n  return notice;\n}\n","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/marker.ts",[],"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/models/address.ts",[],"/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/handlers/utils.ts",["41","42","43","44"],"interface returnType {\n  statusCode: number,\n  body: string,\n}\n\nexport function createOkResponse(action: string, resource: any): returnType {\n  return ({\n    statusCode: 200,\n    body: JSON.stringify({\n      action,\n      resource,\n    }),\n  });\n}\n\nexport function createErrorResponse(error: any): returnType {\n  return ({\n    statusCode: 500,\n    body: JSON.stringify({\n      error,\n    }),\n  });\n}\n","/Users/Yoav/Documents/GitHub/DogFinder/api-ts/src/handlers/lostDog.ts",[],{"ruleId":"45","severity":1,"message":"46","line":4,"column":3,"nodeType":"47","messageId":"48","endLine":4,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":6,"column":50,"nodeType":"47","messageId":"51","endLine":6,"endColumn":63},{"ruleId":"52","severity":1,"message":"53","line":6,"column":60,"nodeType":"54","messageId":"55","endLine":6,"endColumn":63,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":16,"column":37,"nodeType":"47","messageId":"51","endLine":16,"endColumn":47},{"ruleId":"52","severity":1,"message":"53","line":16,"column":44,"nodeType":"54","messageId":"55","endLine":16,"endColumn":47,"suggestions":"58"},"@typescript-eslint/no-unused-vars","'rangeKey' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Argument 'resource' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["59","60"],"Argument 'error' should be typed with a non-any type.",["61","62"],{"messageId":"63","fix":"64","desc":"65"},{"messageId":"66","fix":"67","desc":"68"},{"messageId":"63","fix":"69","desc":"65"},{"messageId":"66","fix":"70","desc":"68"},"suggestUnknown",{"range":"71","text":"72"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"71","text":"73"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"74","text":"72"},{"range":"74","text":"73"},[123,126],"unknown","never",[292,295]]